name: Call Clean GHCR image

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      older_than:
        required: false
        type: string
      tag_regex:
        required: false
        type: string
    secrets:
      PACKAGE_TOKEN:
        required: true
  workflow_dispatch:
    inputs:
      image_name:
        description: "image name"
        required: true
        default: "daemon"
      older_than:
        description: "Minimum days of a version before pruned"
        required: true
        default: "0"
      keep_last:
        description: "exclude count of most recent images"
        required: true
        default: "1"
      dry_run:
        description: "dry run (true|false)"
        required: true
        default: "true"

jobs:
  purge-image:
    name: Delete image from ghcr.io
    runs-on: ubuntu-latest
    
    steps:
      - name: Get Arg
        id: args
        run: |
          # repo=${{ github.repository }}
          org=kcrow-io #${{ github.repository_owner }}
          # github_action_test
          repo=kcrow
          
          echo "repo_name=${repo}" >> $GITHUB_ENV
          echo "org_name=${org}" >> $GITHUB_ENV
          if ${{ inputs.image_name != '' }} ; then
              echo "call by workflow_call"
              echo "image_name=${{ inputs.image_name }}" >> $GITHUB_ENV
              echo "tag_regex=${{ github.event.inputs.tag_regex }}" >> $GITHUB_ENV
              echo "older_than=${{ inputs.older_than }}" >> $GITHUB_ENV
              echo "dry_run=false" >> $GITHUB_ENV
              echo "keep_last=0" >> $GITHUB_ENV
          elif ${{ github.event_name == 'workflow_dispatch' }} ; then
              echo "call by workflow_dispatch"
              echo "image_name=${{ github.event.inputs.image_name }}" >> $GITHUB_ENV
              echo "tag_regex=" >> $GITHUB_ENV
              echo "older_than=${{ github.event.inputs.older_than }}" >> $GITHUB_ENV
              echo "dry_run=${{ github.event.inputs.dry_run }}" >> $GITHUB_ENV
              echo "keep_last=${{ github.event.inputs.keep_last }}" >> $GITHUB_ENV
          else
              echo "unexpected event: ${{ github.event_name }}"
              exit 1
          fi

      - name: Delete CI image
        if: ${{ env.tag_regex != '' }}
        uses: vlaurin/action-ghcr-prune@v0.5.0
        with:
          token: ${{ secrets.PACKAGE_TOKEN }}
          organization: ${{ env.org_name }}
          container: ${{ env.repo_name }}/${{ env.image_name }}
          dry-run: ${{ env.dry_run }}
          older-than: ${{ env.older_than }}
          keep-last: ${{ env.keep_last }}
          prune-untagged: true
          tag-regex: ${{ env.tag_regex }}

      - name: Delete CI image
        if: ${{ env.tag_regex == '' }}
        uses: vlaurin/action-ghcr-prune@v0.5.0
        with:
          token: ${{ secrets.PACKAGE_TOKEN }}
          organization: ${{ env.org_name }}
          container: ${{ env.repo_name }}/${{ env.image_name }}
          dry-run: ${{ env.dry_run }}
          older-than: ${{ env.older_than }}
          keep-last: ${{ env.keep_last }}
          prune-untagged: true
